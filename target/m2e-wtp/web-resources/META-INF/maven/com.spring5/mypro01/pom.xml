<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.spring5</groupId>
	<artifactId>mypro01</artifactId>
	<name>mypro01</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.8</java-version><!-- 1.6 ->1.8 -->
<!-- spring 버전: 3.1.1 -> 5.2.7 -->
		<org.springframework-version>5.2.7.RELEASE</org.springframework-version>
<!-- aspectj 버전: 1.6.10 -> 1.9.5 -->
		<org.aspectj-version>1.9.5</org.aspectj-version>
<!-- slf4j 버전: 1.6.6 -> 1.7.30 -->
		<org.slf4j-version>1.7.30</org.slf4j-version>
	</properties>
	<dependencies><!-- 이 프로그램이 참조하는 라이브러리 목록, Java 기본 라이브러리는 제외됨.  -->

<!-- STS3 plug-in 설치 후, 기존 SPRING 5 프로젝트의 pom.xml 파일의 
        메이븐  xsi:schemaLocation 오류 해결 Libary-->
<!-- 	
<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-resources-plugin</artifactId>
    <version>3.1.0</version>
</dependency>
-->
<!-- 실습02 -->
<!--
[참고] Maven war Plug in 오류 시 해결법
pom.xml파일의 <packaging>war</packaging> 태그에 빨간줄이 가면서 아래와 같은
오류메시지가 발생될 때 해결방법
Execution default-testResources of goal org.apache.maven.plugins:
maven-resources-plugin:2.6:testResources failed:
............
위와 비슷한 오류가 발생되면, 다음의 철차를 수행해봅니다.
1) 프로젝트 우클릭 -> Run As -> Maven install 수행
2) 프로젝트 우클릭 -> Maven -> Project Update 수행
-->


<!-- 실습02: ojdbc, 커넥션 풀/mybatis. spring 연동 -->
<!-- 새로추가: ojdbc6:  -->
<!--  
<dependency>
  		<groupId>com.oracle.database.jdbc</groupId>
  		<artifactId>ojdbc6</artifactId>
  		<version>11.2.0.4</version>
</dependency>--><!-- 새로추가: ojdbc6:  끝-->

<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc8 -->
<!-- Oracle JDBC Driver compatible with JDK8, JDK9, and JDK11 -->
<dependency>
    <groupId>com.oracle.database.jdbc</groupId>
    <artifactId>ojdbc8</artifactId>
    <version>19.7.0.0</version>
</dependency>

<!-- 새로추가: ojdbc10:  -->
<!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc10 -->
<!-- Oracle JDBC Driver compatible with JDK10 and JDK11 -->
<!--  
<dependency>
    <groupId>com.oracle.database.jdbc</groupId>
    <artifactId>ojdbc10</artifactId>
    <version>19.7.0.0</version>
</dependency>
-->

<!-- 새로추가  Apache ConnectionPool(commons-dbcp), commons-beanutils, cglib-nodep -->
<!--
<dependency>
    <groupId>commons-dbcp</groupId>
    <artifactId>commons-dbcp</artifactId>
    <version>1.4</version>
</dependency>
<dependency>
    <groupId>commons-beanutils</groupId>
    <artifactId>commons-beanutils</artifactId>
    <version>1.9.4</version>
</dependency>
<dependency>
    <groupId>cglib</groupId>
    <artifactId>cglib-nodep</artifactId>
    <version>3.3.0</version>
</dependency>
 --><!-- 새로추가 commons-beanutils, commons-dbcp cglib-nodep 끝-->
<!-- 새로추가 내용: 필요하면 mvnrepository에서 버전을 확인하여 사용합니다.-->
<!-- HikariCP 설치(Connection Pool Library, Spring boot에서 기본 사용 -->
<dependency>
    <groupId>com.zaxxer</groupId>
    <artifactId>HikariCP</artifactId>
    <version>3.4.5</version>
</dependency>
<!-- HikariCP 끝-->

<!-- 새로추가: mybatis, mybatis-spring  -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>3.5.5</version>
</dependency>
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis-spring</artifactId>
    <version>2.0.5</version>
</dependency><!-- 새로추가: mybatis, mybatis-spring 끝-->
<!-- spring-jdbc, spring-tx 설치 -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-jdbc</artifactId>
    <version>${org.springframework-version}</version>
</dependency>
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-tx</artifactId>
    <version>${org.springframework-version}</version>
</dependency><!-- spring-jdbc, spring-tx 설치 끝-->
<!-- 새로추가: log4jdbc-log4j2-jdbc4  -->
<!-- 마이바티스 구성 3장 -->
<!-- SQ문장 로그기록 생성을 위한 lob4j 라이브러리-->
<!-- 새로추가: log4jdbc-log4j2-jdbc4 끝 -->
<dependency>
    <groupId>org.bgee.log4jdbc-log4j2</groupId>
    <artifactId>log4jdbc-log4j2-jdbc4</artifactId>
    <version>1.16</version>
</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		
<!-- 새로추가 aspectjweaver -->
<dependency>
    <groupId>org.aspectj</groupId>
    <artifactId>aspectjweaver</artifactId>
    <version>1.9.5</version>
</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.30</version>
			<scope>runtime</scope>
		</dependency>
<!-- slf4j 버전: 1.2.15 -> 1.2.17 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<!-- <scope>runtime</scope> -->
			<!-- <scope>test</scope> -->
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

<!-- 새로추가:  javax.servlet-api -->
<dependency>
    <groupId>javax.servlet</groupId>
    <artifactId>javax.servlet-api</artifactId>
    <version>4.0.1</version>
    <scope>provided</scope>
</dependency>
<!-- 새로추가: javax.servlet.jsp-api -->
<dependency>
    <groupId>javax.servlet.jsp</groupId>
    <artifactId>javax.servlet.jsp-api</artifactId>
    <version>2.3.3</version>
    <scope>provided</scope>
</dependency>
		<!-- Servlet -->
<!--기존내용 주석처리 함 -->
<!-- 
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
 -->
<!-- jsp-api 버전: 2.1 -> 2.2 -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
	
		<!-- Test -->
<!-- junit 버전: 4.7 -> 4.13 -->
		<dependency>
			<groupId>junit</groupId><!-- 단위 테스트 기능을 제공하는 Java 라이브러리. -->
			<artifactId>junit</artifactId>
			<version>4.13</version>
			<scope>test</scope><!--scope가 test로 설정되면, 테스트 실행시에만 이용됨을 의미-->
		</dependency>
<!-- Spring 5.2.7 -->
<dependency>
    <groupId>org.springframework</groupId>
    <artifactId>spring-test</artifactId>
    <version>${org.springframework-version}</version>
    <scope>test</scope>
</dependency>

<!-- lombok  -->
<!-- 
<dependency>
    <groupId>org.projectlombok</groupId>
    <artifactId>lombok</artifactId>
    <version>1.18.12</version>
    <scope>provided</scope>
</dependency>
--><!--  lombok 끝-->

<!-- REST 관련: JSON관련, jackson-databind -->
<!-- 브라우저에 객체를 JSON 포맷의 문자열로 변환시켜 전송 -->
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-databind</artifactId>
    <version>2.11.0</version>
</dependency>
<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-annotations</artifactId>
    <version>2.11.1</version>
</dependency>

<dependency>
    <groupId>com.fasterxml.jackson.core</groupId>
    <artifactId>jackson-core</artifactId>
    <version>2.11.0</version>
</dependency>

<dependency>
    <groupId>com.fasterxml.jackson.dataformat</groupId>
    <artifactId>jackson-dataformat-xml</artifactId>
    <version>2.11.0</version>
</dependency>
<dependency>
    <groupId>org.json</groupId>
    <artifactId>json</artifactId>
    <version>20200518</version>
</dependency>
<dependency>
    <groupId>com.google.code.gson</groupId>
    <artifactId>gson</artifactId>
    <version>2.8.6</version>
</dependency>
<!-- REST: JSON관련, jackson-databind Libary END-->


<!-- Tiles Framework 관련 -->
<!-- 
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-core</artifactId>
    <version>3.0.8</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-jsp</artifactId>
    <version>3.0.8</version>
</dependency>
<dependency>
    <groupId>org.apache.tiles</groupId>
    <artifactId>tiles-servlet</artifactId>
    <version>3.0.8</version>
</dependency>
<dependency>
	<groupId>org.apache.tiles</groupId>
	<artifactId>tiles-template</artifactId>
	<version>3.0.8</version>
</dependency>
 -->
<!-- Tiles Framework 관련 끝-->




<!-- 새로추가: 파일업로드/다운로드 -->
<!-- Apache 파일업로드/다운로드 libary -->
<dependency>
    <groupId>commons-fileupload</groupId>
    <artifactId>commons-fileupload</artifactId>
    <version>1.4</version>
</dependency>
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.7</version>
</dependency>
<!-- 새로추가: 파일업로드/다운로드: 끝 -->
 
 

<!-- 새로추가: 커스텀 JSTL 라이브러리taglibs-standard -->
<!-- 위의 javax.servlet의 jstl, 1.2 가 문제 있을 시 추가할 것-->
<!-- 
<dependency>
    <groupId>org.apache.taglibs</groupId>
    <artifactId>taglibs-standard-impl</artifactId>
    <version>1.2.5</version>
</dependency>
<dependency>
    <groupId>org.apache.taglibs</groupId>
    <artifactId>taglibs-standard-spec</artifactId>
    <version>1.2.5</version>
</dependency>
<dependency>
    <groupId>org.apache.taglibs</groupId>
    <artifactId>taglibs-standard-jstlel</artifactId>
    <version>1.2.5</version>
</dependency>
<dependency>
    <groupId>org.apache.taglibs</groupId>
    <artifactId>taglibs-standard-compat</artifactId>
    <version>1.2.5</version>
</dependency>
 -->
<!-- 새로추가: taglibs-standard 끝 -->

<!-- 22장: 이미지에 대한 Thumbnail 처리 라이브러리 -->
<!-- https://mvnrepository.com/artifact/net.coobird/thumbnailator -->
<dependency>
    <groupId>net.coobird</groupId>
    <artifactId>thumbnailator</artifactId>
    <version>0.4.11</version>
</dependency>
<!-- END - 이미지에 대한 Thumbnail 처리 라이브러리 -->


	</dependencies>
	
    <build>
        <plugins>
 <!-- maven-eclipse-plugin 버전변경: 2.9->2.10 -->
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            
<!-- maven-compiler-plugin 버전변경: 2.5.1->3.8.1 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>1.8</source><!-- 1.6 ->1.8 -->
                    <target>1.8</target><!-- 1.6 ->1.8 -->
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>

            
<!-- 중요!!!!! -->
<!-- XML 설정파일 대신 자바 구성 설정 클래스를 사용하는 경우 -->
<!-- 메이븐의 정상작동을 위해 아래의 주석부분의 플러그인을 추가합니다(주석제거.) -->
<!--
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>  
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml> 
				</configuration>
			</plugin>
-->
<!-- XML 설정파일 대신 자바 구성 설정 클래스를 사용하는 경우 END-->
            
<!-- exec-maven-plugin 버전변경: 1.2.1->3.0.0 -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>